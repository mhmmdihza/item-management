version: '3'
services:
  postgresd_central:
    container_name: postgresd_central
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  postgresd_tjduren:
    container_name: postgresd_tjduren
    image: postgres:13-alpine
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
    restart: unless-stopped
    
  postgresd_grogol:
    container_name: postgresd_grogol
    image: postgres:13-alpine
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
    restart: unless-stopped   
    
  postgresd_slipi:
    container_name: postgresd_slipi
    image: postgres:13-alpine
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
    restart: unless-stopped
    
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --topic REQUEST
      kafka-topics --bootstrap-server broker:29092 --create --topic CHECK
      kafka-topics --bootstrap-server broker:29092 --create --topic AVAILABLE
      kafka-topics --bootstrap-server broker:29092 --create --topic TRANSFER
      "